@startuml
'https://plantuml.com/class-diagram

abstract class AbstractFlyingObject
{
    # locationX:int
    # locationY:int
    # speedX:int
    # speedY:int
    # image:BufferedImage
    # width:int
    # height:int
    # isValid:boolean

    + AbstractFlyingObject(int locationX, int locationY, int speedX, int speedY)
    + forward():void
    + crash(FlyingObject flyingObject):boolean
    + setLocation(double locationX, double locationY):void
    + getLocationX():int
    + getLocationY():int
    + getSpeedY():int
    + getImage():BufferedImage
    + getWidth():int
    + getHeight():int
    + notValid():boolean
    + vanish():void
}
abstract class AbstractAircraft
{
	# axHp:int
    # hp:int
    + AbstractAircraft(int locationX, int locationY, int speedX, int speedY, int hp)
    + increaseHp(int increase):void
    + decreaseHp(int decrease):void
    + getHp():int
    + {abstract} shoot():List<Bullet>
 }

 class Game
 {

 }

AbstractFlyingObject <|-right- AbstractAircraft

AbstractAircraft <|-right- HeroAircraft

HeroAircraft <-- HeroAircraft

HeroBullet <-up- HeroAircraft

Game <.down. HeroAircraft

class HeroAircraft {
    - shootNum:int
    - power:int
    - direction:int
    - heroAircraft:HeroAircraft
    - HeroAircraft(int locationX, int locationY, int speedX, int speedY, int hp)
    + getHeroAircraft(int locationX, int locationY, int speedX, int speedY, int hp)
    + forward():void
    + shoot():List<BaseBullet>
}

class HeroBullet {
    + HeroBullet(int locationX, int locationY,
     int speedX, int speedY, int power)
}

@enduml